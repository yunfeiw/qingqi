columnsTable: [
  {
    type: "selection",
    width: "60",
    fixed: "left",
    align: "center",
  },
  {
    title: "公司名称",
    key: "orgName",
    ellipsis: true,
    tooltip: true,
    resizable: true,
    fixed: "left",
    minWidth: 340,
    render: (h, p) => {
      const { orgName, clientCode } = p.row;
      return CusInfoTooltip(h, clientCode, orgName);
    },
  },

  {
    title: "税号",
    key: "orgTaxNum",
    ellipsis: true,
    tooltip: true,
    flexd: "left",
    minWidth: 250,
  },
  {
    title: "申报期",
    key: "declareMonth",
    width: 180,
    align: "center",
    render: (h, p) => {
      const { declareMonth } = p.row;
      return h(
        "div",
        declareMonth ? moment(declareMonth).format("YYYY-MM") : "--"
      );
    },
  },
  {
    title: "类型",
    key: "gtbtTaxType",
    width: 200,
    tooltip: true,
    render: (h, p) => {
      const { gtbtTaxType } = p.row;
      let item =
        this.GTBT_TAX_TYPE.find((e) => e.dictCode == gtbtTaxType) || {};
      return h("div", item["dictName"] || "--");
    },
  },
  {
    title: "状态",
    key: "collectStatus",
    ellipsis: true,
    tooltip: true,
    width: 160,
    render: (h, p) => {
      const { collectStatus, msgerr } = p.row;
      let item =
        this.COLLECT_STATUS.find((e) => e.dictCode == collectStatus) ||
        {};
      return h(
        "Tag",
        {
          props: {
            type: "dot",
            color: collectStatus == 3 ? "error" : "primary",
          },
        },
        [
          h(
            "a",
            {
              on: {
                click: () => {
                  if (collectStatus == 3) {
                    this.msg = msgerr;
                    this.$refs.errTip.show = true;
                  }
                },
              },
            },
            item["dictName"] || "--"
          ),
        ]
      );
    },
  },
  {
    title: "时间",
    key: "sendTime",
    ellipsis: true,
    tooltip: true,
    align: "center",
    minWidth: 180,
    render: (h, p) => {
      const { sendTime } = p.row;
      return h(
        "div",
        sendTime ? moment(sendTime).format("YYYY-MM-DD HH:mm:ss") : "--"
      );
    },
  },
  {
    title: "操作",
    key: "id",
    fixed: "right",
    width: 250,
    render: (h, p) => {
      const { id } = p.row;

      var arr = [];
      arr.push(
        h(
          "a",
          {
            attrs: {
              class: "vouchericon",
            },
            on: {
              click: () => {
                this.$refs.czEle.init(id);
              },
            },
          },
          "操作"
        )
      );

      arr.push(
        h(
          "a",
          {
            attrs: {
              class: "vouchericon",
            },
            on: {
              click: () => {
                window.$fileCenter.openUploadModal({
                  // tempName: "模板名",
                  // tempUrl: this.$api.taxdeclaresupp.importExcelDownload(),
                  uploadType: ["zip"],
                  uploadSize: 1024 * 200,
                  title: "税务档案文件生成中...",
                  content: "请前往【文件传输中心】查看上传进度。",
                  registerId: "gtbt_version_collect_file_upload",
                  params: { id },
                  onSuccess: () => { },
                  onError: () => { },
                  onStep: (step) => { },
                });
              },
            },
          },
          "上传"
        )
      );

      return operatorBtn(arr, h);
    },
  },
],
  dataTable: [],